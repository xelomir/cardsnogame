from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, ContextTypes
import os

# Get the token from environment variable or use the one from the example
TOKEN = ('')

# The URL to your deployed application
# Use your actual deployment URL here once you have deployed the application
APP_URL = 

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Send a welcome message with a button to launch the card game."""
    user_id = update.message.from_user.id
    user_name = update.message.from_user.first_name

    # Create an inline keyboard with a button to launch the WebApp
    keyboard = [[
        InlineKeyboardButton(
            "–ò–≥—Ä–∞—Ç—å –≤ –∫–∞—Ä—Ç–æ—á–Ω—É—é –∏–≥—Ä—É!",
            web_app={"url": f"{APP_URL}?user_id={user_id}"}
        )
    ]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    # Send welcome message with the button
    await update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {user_name}! –ì–æ—Ç–æ–≤ –ø–æ–∫–æ—Ä–∏—Ç—å –º–∏—Ä –∫–∞—Ä—Ç–æ—á–Ω—ã—Ö —Å—Ä–∞–∂–µ–Ω–∏–π?",
        reply_markup=reply_markup
    )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Send a message when the command /help is issued."""
    help_text = (
        "üéÆ *–ö–∞—Ä—Ç–æ—á–Ω–∞—è –∏–≥—Ä–∞ –≤ Telegram* üéÆ\n\n"
        "–ö–æ–º–∞–Ω–¥—ã:\n"
        "/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n"
        "–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã:\n"
        "- –†–∞–∑—ã–≥—Ä—ã–≤–∞–π—Ç–µ –∫–∞—Ä—Ç—ã, —Ç—Ä–∞—Ç—è –º–∞–Ω—É\n"
        "- –ê—Ç–∞–∫—É–π—Ç–µ –∫–∞—Ä—Ç—ã –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ –∏–ª–∏ –µ–≥–æ –≥–µ—Ä–æ—è\n"
        "- –ü–æ–±–µ–∂–¥–∞–π—Ç–µ, —É–º–µ–Ω—å—à–∏–≤ –∑–¥–æ—Ä–æ–≤—å–µ –≤—Ä–∞–∂–µ—Å–∫–æ–≥–æ –≥–µ—Ä–æ—è –¥–æ 0\n\n"
        "–£–¥–∞—á–∏ –≤ —Å—Ä–∞–∂–µ–Ω–∏—è—Ö!"
    )
    await update.message.reply_text(help_text, parse_mode="Markdown")

def main():
    """Start the bot."""
    # Create the Application and pass it your bot's token
    application = Application.builder().token(TOKEN).build()

    # Add command handlers
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))

    # Run the bot until the user presses Ctrl-C
    application.run_polling()

if __name__ == "__main__":
    main()
